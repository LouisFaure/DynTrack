name: Build Wheels

on:
  push:
    tags: ['v*']
    branches: ['*dev']

jobs:
  build_winmac:
    if: |
      contains(github.event.head_commit.message, 'pypi test') ||
      startsWith(github.ref, 'refs/tags/v')
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest,windows-latest]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Setup pip
        run: |
          python -m pip install --upgrade pip
          python -m pip install wheel
      - name: Build wheel
        run: python setup.py bdist_wheel

      - uses: actions/upload-artifact@v2
        with:
          path: ./dist/*.whl

  build_linux:
    if: |
      contains(github.event.head_commit.message, 'pypi test') ||
      startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Make source
        run: |
          python -m pip install --upgrade pip
          python -m pip install wheel
          python setup.py sdist

      - name: Build manylinux wheels
        uses: RalfG/python-wheels-manylinux-build@v0.4.0-manylinux1_x86_64
        with:
          python-versions: 'cp38-cp38'

      - name: Remove linux wheels
        run: sudo rm -r dist/*linux_x86_64*

      - uses: actions/upload-artifact@v2
        with:
          path: ./dist/*

  publish:
    if: |
      contains(github.event.head_commit.message, 'pypi test') ||
      startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs: [build_winmac,build_linux]
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist
      - name: Publish package to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
          verbose: true
        if: contains(github.event.head_commit.message, 'pypi test')
      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          verbose: true
        if: startsWith(github.ref, 'refs/tags/v')
